.\"bind a command verb to a local function
.TH add_action 3

.SH NAME
add_action() - bind a command verb to a local function

.SH SYNOPSIS
void add_action( string fun, string cmd, int flag );

.SH DESCRIPTION
Set up a local function <fun> to be called when user input matches the 
command <cmd>. Functions called by a player command will get the arguments
as a string. It must then return 0 if it was the wrong command, otherwise 1.
.PP
If it was the wrong command, the parser will continue searching for another
command, until one returns true or give error message to player.
.PP
For example, there can be a wand and a rod. Both of these objects define
add_verb("wave"). One of them will be randomly called first, and it must
look at the argument, and match against "wand" or "rod" respectively.
.PP
If the second argument (<cmd>) is not given, it must be given by add_verb().
Support of add_verb() is of historical reasons.
.PP
Always have add_action() called only from an init() routine. The object that
defines commands must be present to the player, either being the player,
being carried by the player, being the room around the player, or being an
object in the same room as the player.
.PP
If argument <flag> is 1, then only the leading characters of the command has
to match the verb <cmd>.
.PP
Never define an action that will call the function exit(), because it is
a special function.

.SH SEE ALSO
query_verb(3), add_verb(3), init(l), exit(l)
