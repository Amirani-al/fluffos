#################################################
# GNUmakefile for MudOS driver			#
# 	- requires gnu make to use		#
#################################################

###########################
# setup and configuration #
###########################

# define this to be -lresolv if your machine has it
RESOLV=

# Set INSTALL_DIR to the directory where you want to install the executables.
INSTALL_DIR = /radio/erikkay/bin

#Enable warnings from the compiler, if wanted.
WARN=

# define profiling if you want it
#PROFIL=-pg

# define optimizing flags if desired
OPTIMIZE=-O

# Enable run time debugging.
#DEBUG=-DDEBUG
#DEBUG_MACRO=-DDEBUG_MACRO

# If you don't have 'strchr', then add next flag to CFLAGS.
# -Dstrchr=index -Dstrrchr=rindex

CFLAGS= -g -DMIRE $(WARN) $(OPTIMIZE) $(PROFIL) $(DEBUG) $(DEBUG_MACRO)

# set CC=cc on a NeXT (or gcc if you have a newer version than the NeXT
# comes with) and to gcc on other machines (if possible)
CC=gcc

# define this to be bison if you have it, and yacc otherwise
YACC=yacc
YFLAGS = -d

# Add extra libraries here.
LIBS= -lm -ltext -leditor2 -ldoppelganger -ldsys -lndcommon -lndclient -lorwant -lNeXT_s -lMallocDebug -lsys_s

# Add str.c here if you don't have memcpy() or strtol().
# Add alloca.c if you don't have alloca() on your machine.
SRC=lang.tab.c lex.c main.c rc.c interpret.c simulate.c file.c object.c \
  array.c mapping.c comm1.c ed.c regexp.c wiz_list.c swap.c malloc.c \
  call_out.c otable.c dumpstat.c stralloc.c hash.c indentp.c port.c \
  access_check.c clilib.c parse.c simul_efun.c sprintf.c backend.c \
  mire.c

# define this to be where you want the compiled files to go
OBJDIR = obj


#################################################
# the meat of things 				#
# don't change anything below this section	#
#################################################


VPATH = $(OBJDIR)

OBJ=$(addprefix $(OBJDIR)/,$(subst .c,.o,$(SRC)))

driver: $(OBJDIR) $(OBJ)
	-mv driver driver.old
	$(CC) $(CFLAGS) $(OBJ) -o driver $(LIBS)

all: driver hname

depend:
	-rm Dependencies
	touch Dependencies
	for i in *.c; do echo -n $(OBJDIR)/ >> Dependencies; $(CC) -E -MM $$i >> Dependencies; done

hname:  hname.c
	$(CC) hname.c $(RESOLV) -o hname

$(OBJDIR):
	mkdir $(OBJDIR)

$(OBJDIR)/%.o: %.c
	$(CC) -I$(OBJDIR) $(CFLAGS) -o $@ -c $<

%.tab.c: %.y
	$(YACC) $(YFLAGS) $<
	-mv y.tab.c $@
	-mv y.tab.h $*.tab.h

list_funcs:
	@$(CC) -E $(CFLAGS) func_spec.c

make_func: make_func.tab.c
	$(CC) $< -DFUNC_SPEC=\"gmake\ list_funcs\" -o make_func

make_malloc: make_malloc.o
	$(CC) make_malloc.o -o make_malloc

malloc.c: config.h make_malloc
	./make_malloc
	touch malloc.c
	$(CC) $(CFLAGS) -c malloc.c

lang.y efun_defs.c: malloc.c func_spec.c make_func prelang.y \
		postlang.y config.h
	./make_func > efun_defs.c

tags: $(SRC)
	ctags $(SRC)

TAGS: $(SRC)
	etags $(SRC)

install: driver hname
	install -c driver $(INSTALL_DIR)/driver
	install -c hname $(INSTALL_DIR)/hname

clean:
	-rm -rf obj *.o mon.out gmon.out *.tab.c *.tab.h
	-rm -f lang.h lang.y efun_defs.c *.ln tags *~ TAGS
	-rm -f make_func driver driver.old hname

include Dependencies	# include dependencies generated by gmake depend
